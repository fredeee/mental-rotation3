{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/RatingScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/RatingScreen.vue","mtime":1642626386094},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZWNvcmQgZnJvbSAnLi4vaGVscGVycy9SZWNvcmQnOwppbXBvcnQgUmF0aW5nSW5wdXQgZnJvbSAnLi4vaW5wdXRzL1JhdGluZ0lucHV0JzsKaW1wb3J0IExpZmVjeWNsZVNjcmVlbiBmcm9tICcuLi9zY3JlZW5zL0xpZmVjeWNsZVNjcmVlbic7Ci8qKgogKiBJbmhlcml0cyBmcm9tIExpZmVjeWNsZVNjcmVlbgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSYXRpbmdTY3JlZW4nLAogIGNvbXBvbmVudHM6IHsKICAgIExpZmVjeWNsZVNjcmVlbiwKICAgIFJhdGluZ0lucHV0LAogICAgUmVjb3JkCiAgfSwKICBleHRlbmRzOiBMaWZlY3ljbGVTY3JlZW4sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogQSBxdWVzdGlvbgogICAgICovCiAgICBxdWVzdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBMZWZ0IGxhYmVsIGZvciByYXRpbmcKICAgICAqLwogICAgb3B0aW9uTGVmdDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgLyoqCiAgICAgKiBSaWdodCBsYWJlbCBmb3IgcmF0aW5nCiAgICAgKi8KICAgIG9wdGlvblJpZ2h0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBsZW5ndGggb2YgdGhlIHJhdGluZyBzY2FsZQogICAgICovCiAgICBjb3VudDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDcKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["RatingScreen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RatingScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/trial_screens","sourcesContent":["<docs>\nThis is a pre-built rating screen, with limited functionality, but simpler to use.\n\n```vue\n<Experiment>\n    <RatingScreen\n        question=\"How healthy do you usually eat?\"\n        qud=\"Eating healthy is good for you.\"\n        option-left=\"Very healthy\"\n        option-right=\"Very unhealthy\"\n    />\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <!-- pass down props -->\n  <LifecycleScreen v-bind=\"$props\">\n    <!-- pass down slots -->\n    <template slot=\"fixation\">\n      <slot name=\"fixation\"></slot>\n    </template>\n    <template slot=\"stimulus\">\n      <slot name=\"stimulus\"></slot>\n    </template>\n\n    <template #task>\n      <Record\n        :data=\"{\n          question,\n          optionLeft,\n          optionRight,\n          count\n        }\"\n      />\n      <p v-if=\"question\" v-text=\"question\"></p>\n      <RatingInput\n        :left=\"optionLeft\"\n        :right=\"optionRight\"\n        :count=\"count\"\n        :response.sync=\"$magpie.measurements.response\"\n      />\n      <button\n        v-if=\"\n          $magpie.measurements.response &&\n          !$magpie.validateMeasurements.response.$invalid\n        \"\n        @click=\"$magpie.saveAndNextScreen()\"\n      >\n        Next\n      </button>\n    </template>\n    <template #feedback>\n      <slot name=\"feedback\"></slot>\n    </template>\n  </LifecycleScreen>\n</template>\n\n<script>\nimport Record from '../helpers/Record';\nimport RatingInput from '../inputs/RatingInput';\nimport LifecycleScreen from '../screens/LifecycleScreen';\n/**\n * Inherits from LifecycleScreen\n */\nexport default {\n  name: 'RatingScreen',\n  components: {\n    LifecycleScreen,\n    RatingInput,\n    Record\n  },\n  extends: LifecycleScreen,\n  props: {\n    /**\n     * A question\n     */\n    question: {\n      type: String,\n      required: true\n    },\n    /**\n     * Left label for rating\n     */\n    optionLeft: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Right label for rating\n     */\n    optionRight: {\n      type: String,\n      default: ''\n    },\n    /**\n     * The length of the rating scale\n     */\n    count: {\n      type: Number,\n      default: 7\n    }\n  }\n};\n</script>\n<style scoped></style>\n"]}]}