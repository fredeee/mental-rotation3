{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/src/App.vue","mtime":1642627550168},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovLyBMb2FkIGRhdGEgZnJvbSBjc3YgZmlsZXMgYXMgamF2YXNjcmlwdCBhcnJheXMgd2l0aCBvYmplY3RzCmltcG9ydCBtYWluX3RyaWFscyBmcm9tICcuLi90cmlhbHMvbXJfbWFpbl90cmlhbHMuY3N2JzsKaW1wb3J0IHRyYWluaW5nX3RyaWFscyBmcm9tICcuLi90cmlhbHMvbXJfdHJhaW5pbmdfdHJpYWxzLmNzdic7CgppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnLAogIGRhdGEoKSB7CgogICAgcmV0dXJuIHsKICAgICAgbWFpbl90cmlhbHM6IF8uc2h1ZmZsZShtYWluX3RyaWFscyksCiAgICAgIHRyYWluaW5nX3RyaWFsczogXy5zaHVmZmxlKHRyYWluaW5nX3RyaWFscyksCiAgICAgIGltYWdlU2VsZWN0aW9uOiBfLnNodWZmbGUoaW1hZ2VTZWxlY3Rpb24pLAogICAgICBzbGlkZXJSYXRpbmcsCiAgICAgIGtleXM6IF8uc2h1ZmZsZShbJ3NhbWUnLCAnZGlmZmVyZW50bHknXSksCgogICAgICAvLyBFeHBvc2UgbG9kYXNoLnJhbmdlIHRvIHRlbXBsYXRlIGFib3ZlCiAgICAgIHJhbmdlOiBfLnJhbmdlCiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvLyBzdG9yZSBzYW1lIGtleQogICAgbGV0IHNhbWVfa2V5ID0gdGhpcy5fZGF0YS5rZXlzWzBdID09ICdzYW1lJyA/ICdmJyA6ICdqJzsKICAgIHRoaXMuJG1hZ3BpZS5hZGRFeHBEYXRhKHsKICAgICAgc2FtZV9rZXkgOiBzYW1lX2tleSAgfSk7CiAgfQp9OwoKY29uc3QgaW1hZ2VTZWxlY3Rpb24gPSBbCiAgewogICAgUVVEOiAnaW1hZ2Ugc2VsZWN0aW9uIC0gbG9vcDogMSwgdHJpYWw6IDEnLAogICAgcXVlc3Rpb246ICdIb3cgYXJlIHlvdSB0b2RheT8nLAogICAgb3B0aW9uMTogJ2ZpbmUnLAogICAgcGljdHVyZTE6ICdpbWFnZXMvcXVlc3Rpb25fbWFya18wMi5wbmcnLAogICAgb3B0aW9uMjogJ2dyZWF0JywKICAgIHBpY3R1cmUyOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDEucG5nJwogIH0sCiAgewogICAgUVVEOiAnaW1hZ2Ugc2VsZWN0aW9uIC0gbG9vcDogMSwgdHJpYWw6IDInLAogICAgb3B0aW9uMTogJ3NoaW55JywKICAgIHBpY3R1cmUxOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDMuanBnJywKICAgIG9wdGlvbjI6ICdyYWluYm93JywKICAgIHBpY3R1cmUyOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDQucG5nJwogIH0sCiAgewogICAgUVVEOiAnaW1hZ2Ugc2VsZWN0aW9uIC0gbG9vcDogMiwgdHJpYWw6IDEnLAogICAgcXVlc3Rpb246ICdIb3cgYXJlIHlvdSB0b2RheT8nLAogICAgb3B0aW9uMTogJ2ZpbmUnLAogICAgcGljdHVyZTE6ICdpbWFnZXMvcXVlc3Rpb25fbWFya18wMy5qcGcnLAogICAgb3B0aW9uMjogJ2dyZWF0JywKICAgIHBpY3R1cmUyOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDEucG5nJwogIH0sCiAgewogICAgUVVEOiAnaW1hZ2Ugc2VsZWN0aW9uIC0gbG9vcDogMiwgdHJpYWw6IDInLAogICAgb3B0aW9uMTogJ3NoaW55JywKICAgIHBpY3R1cmUxOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDIucG5nJywKICAgIG9wdGlvbjI6ICdyYWluYm93JywKICAgIHBpY3R1cmUyOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDQucG5nJwogIH0KXTsKCmNvbnN0IHNsaWRlclJhdGluZyA9IFsKICB7CiAgICBwaWN0dXJlOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDIucG5nJywKICAgIHF1ZXN0aW9uOiAnSG93IGFyZSB5b3UgdG9kYXk/JywKICAgIG9wdGlvbkxlZnQ6ICdmaW5lJywKICAgIG9wdGlvblJpZ2h0OiAnZ3JlYXQnCiAgfSwKICB7CiAgICBwaWN0dXJlOiAnaW1hZ2VzL3F1ZXN0aW9uX21hcmtfMDEucG5nJywKICAgIHF1ZXN0aW9uOiAiV2hhdCdzIHRoZSB3ZWF0aGVyIGxpa2U/IiwKICAgIG9wdGlvbkxlZnQ6ICdzaGlueScsCiAgICBvcHRpb25SaWdodDogJ3JhaW5ib3cnCiAgfSwKICB7CiAgICBRVUQ6ICdIZXJlIGlzIGEgc2VudGVuY2UgdGhhdCBzdGF5cyBvbiB0aGUgc2NyZWVuIGZyb20gdGhlIHZlcnkgYmVnaW5uaW5nJywKICAgIHBpY3R1cmU6ICdpbWFnZXMvcXVlc3Rpb25fbWFya18wMy5qcGcnLAogICAgcXVlc3Rpb246ICJXaGF0J3Mgb24gdGhlIGJyZWFkPyIsCiAgICBvcHRpb25MZWZ0OiAnaGFtJywKICAgIG9wdGlvblJpZ2h0OiAnamFtJwogIH0KXTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <Experiment title=\"_magpie mental-rotation\">\n    <InstructionScreen :title=\"'Welcome'\">\n      Welcome to this short experiment (~10 minutes) on visual cognition. Thank you for participating!\n      <br />  <br />\n      Click next to learn more about the experimental task.\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'General Instructions'\">\n      <h2>Task:</h2>\n      In the following 11 trials you will be presented two images of gemoetric cubes.\n      Your task is to decide whether both cubes share the same shape or not.\n      <br />\n      <br />\n      Please press button  <b>f</b> on your keyboard if you think that the cubes have <b>{{keys[0]}}</b> shapes.\n      <br />\n      Please press button  <b>j</b> on your keyboard if you think that the cubes have <b>{{keys[1]}}</b> shapes.\n\n      <br />\n      <br />\n      It is important that you try to response as fast and as correct as possible!\n\n      <br />\n      Good luck!\n    </InstructionScreen>\n\n    <!-- Here we create screens in a loop for every entry in forced_choice -->\n    <template v-for=\"(training_trial, i) of training_trials\">\n      <KeypressScreen\n        :keys=\"{'f': keys[0], 'j': keys[1]}\"\n        :progress=\"i / training_trials.length\"\n        :question=\"training_trial.question\"\n        :options=\"[training_trial.option1, training_trial.option2]\"\n        :fixationTime= \"Math.floor(Math.random() * 1500 + 500)\"\n        :responseTime=\"7500\"\n        :feedbackTime=\"800\"\n      >\n        <template #stimulus>\n          <img :src=\"training_trial.picture\" />\n          <Record :data=\"{\n              image: training_trial.picture,\n              angle: training_trial.angle,\n              expected: training_trial.expected,\n              item: training_trial.item,\n              trial_type: 'training',\n              trial_number: i\n            }\" />\n        </template>\n\n        <template #feedback>\n          <p v-if=\"!$magpie.measurements.hasOwnProperty('response')\">Faster!</p>\n          <p v-else-if=\"$magpie.measurements.response == $magpie.measurements.expected\"> Correct! </p>\n          <p v-else> Wrong!</p>\n        </template>\n      </KeypressScreen>\n    </template>\n\n    <PostTestScreen />\n\n    <!-- While developing your experiment, using the DebugResults screen is fine,\n      once you're going live, you can use the <SubmitResults> screen to automatically send your experimental data to the server.\n\n      <template #feedback>\n        <p v-if=\"!$magpie.measurements.hasOwnProperty('response')\">Faster!</p>\n        <p v-else-if=\"!$magpie.measurements.hasOwnProperty('response')\"> Wrong </p>\n        <p v-else> Correct </p>\n      </template>\n\n      mounted() { this.$magpie.addExpData({\n          same_key : same_key });\n      }\n\n    -->\n    <SubmitResultsScreen/>\n  </Experiment>\n</template>\n\n<script>\n\n// Load data from csv files as javascript arrays with objects\nimport main_trials from '../trials/mr_main_trials.csv';\nimport training_trials from '../trials/mr_training_trials.csv';\n\nimport _ from 'lodash';\n\nexport default {\n  name: 'App',\n  data() {\n\n    return {\n      main_trials: _.shuffle(main_trials),\n      training_trials: _.shuffle(training_trials),\n      imageSelection: _.shuffle(imageSelection),\n      sliderRating,\n      keys: _.shuffle(['same', 'differently']),\n\n      // Expose lodash.range to template above\n      range: _.range\n    };\n  },\n\n  mounted() {\n    // store same key\n    let same_key = this._data.keys[0] == 'same' ? 'f' : 'j';\n    this.$magpie.addExpData({\n      same_key : same_key  });\n  }\n};\n\nconst imageSelection = [\n  {\n    QUD: 'image selection - loop: 1, trial: 1',\n    question: 'How are you today?',\n    option1: 'fine',\n    picture1: 'images/question_mark_02.png',\n    option2: 'great',\n    picture2: 'images/question_mark_01.png'\n  },\n  {\n    QUD: 'image selection - loop: 1, trial: 2',\n    option1: 'shiny',\n    picture1: 'images/question_mark_03.jpg',\n    option2: 'rainbow',\n    picture2: 'images/question_mark_04.png'\n  },\n  {\n    QUD: 'image selection - loop: 2, trial: 1',\n    question: 'How are you today?',\n    option1: 'fine',\n    picture1: 'images/question_mark_03.jpg',\n    option2: 'great',\n    picture2: 'images/question_mark_01.png'\n  },\n  {\n    QUD: 'image selection - loop: 2, trial: 2',\n    option1: 'shiny',\n    picture1: 'images/question_mark_02.png',\n    option2: 'rainbow',\n    picture2: 'images/question_mark_04.png'\n  }\n];\n\nconst sliderRating = [\n  {\n    picture: 'images/question_mark_02.png',\n    question: 'How are you today?',\n    optionLeft: 'fine',\n    optionRight: 'great'\n  },\n  {\n    picture: 'images/question_mark_01.png',\n    question: \"What's the weather like?\",\n    optionLeft: 'shiny',\n    optionRight: 'rainbow'\n  },\n  {\n    QUD: 'Here is a sentence that stays on the screen from the very beginning',\n    picture: 'images/question_mark_03.jpg',\n    question: \"What's on the bread?\",\n    optionLeft: 'ham',\n    optionRight: 'jam'\n  }\n];\n</script>\n"]}]}