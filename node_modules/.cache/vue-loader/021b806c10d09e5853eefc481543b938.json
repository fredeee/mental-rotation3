{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/Screen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/Screen.vue","mtime":1642626386096},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CgovKioKICogVGhpcyBjb21wb25lbnQgbGV0cyB5b3UgY3JlYXRlIGV4cGVyaW1lbnQgc2VjdGlvbnMgdGhhdCBhcHBlYXIgb25lIGFmdGVyIHRoZSBvdGhlciBsaWtlIGEgc2xpZGVzaG93LgogKiBUcmlhbCBkYXRhCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NjcmVlbicsCiAgbWl4aW5zOiBbdmFsaWRhdGlvbk1peGluXSwKICBwcm9wczogewogICAgLyoqCiAgICAgKiBUaGUgdGl0bGUgb2YgdGhpcyBzY3JlZW4KICAgICAqLwogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgLyoqCiAgICAgKiBJZiB5b3Ugd2FudCB0byBzaG93IGEgcHJvZ3Jlc3MgYmFyLCBzZXQgdGhpcyB0byBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMQogICAgICovCiAgICBwcm9ncmVzczogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IC0xCiAgICB9LAogICAgLyoqCiAgICAgKiBEZWZpbmUgdmFsaWRhdG9ycyBmb3IgbWVhc3VyZW1lbnRzCiAgICAgKi8KICAgIHZhbGlkYXRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZWFzdXJlbWVudHM6IHt9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgICckbWFncGllLm1lYXN1cmVtZW50cyc6IHsKICAgICAgaGFuZGxlcigpIHsKICAgICAgICB0aGlzLm1lYXN1cmVtZW50cyA9IHRoaXMuJG1hZ3BpZS5tZWFzdXJlbWVudHM7CiAgICAgICAgdGhpcy4kdi5tZWFzdXJlbWVudHMuJHRvdWNoKCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIGJlZm9yZU1vdW50KCkgewogICAgdGhpcy4kbWFncGllLnNldFByb2dyZXNzKHRoaXMucHJvZ3Jlc3MpOwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJG1hZ3BpZS52YWxpZGF0ZU1lYXN1cmVtZW50cyA9IHRoaXMuJHYubWVhc3VyZW1lbnRzOwogICAgdGhpcy4kbWFncGllLm1vdXNldHJhY2tpbmcuc3RhcnQoKTsKICB9LAogIHZhbGlkYXRpb25zKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVhc3VyZW1lbnRzOiB0aGlzLnZhbGlkYXRpb25zCiAgICB9OwogIH0sCiAgLyoqCiAgICogUGxhY2UgeW91ciBzbGlkZXMgaW5zaWRlIHRoaXMgc2xvdC4gVGhleSB3aWxsIGJlIHZpc2libGUgb25lIGFmdGVyIHRoZSBvdGhlciwgbGlrZSBhIHNsaWRlIHNob3cuCiAgICogQHNsb3QgZGVmYXVsdAogICAqLwogIHJlbmRlcihoKSB7CiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuJHNsb3RzLmRlZmF1bHQ7CiAgICBpZiAoIWNoaWxkcmVuKSB7CiAgICAgIHJldHVybiBoKCdkaXYnLCB7IGNsYXNzOiAnc2NyZWVuJyB9LCBbCiAgICAgICAgdGhpcy50aXRsZSA/IGgoJ2gyJywgdGhpcy50aXRsZSkgOiBudWxsCiAgICAgIF0pOwogICAgfQogICAgbGV0IHNsaWRlOwogICAgY29uc3Qgc2xpZGVzID0gY2hpbGRyZW4uZmlsdGVyKChjKSA9PiAhIWMuY29tcG9uZW50T3B0aW9ucyk7CiAgICBpZiAoCiAgICAgIHNsaWRlcy5sZW5ndGggJiYKICAgICAgc2xpZGVzLmV2ZXJ5KChjKSA9PiBjLmNvbXBvbmVudE9wdGlvbnMudGFnID09PSAnU2xpZGUnKQogICAgKSB7CiAgICAgIHNsaWRlID0gc2xpZGVzW3RoaXMuJG1hZ3BpZS5jdXJyZW50U2xpZGVJbmRleF07CiAgICB9IGVsc2UgewogICAgICBzbGlkZSA9IHRoaXMuJHNsb3RzLmRlZmF1bHQ7CiAgICB9CiAgICByZXR1cm4gaCgnZGl2JywgeyBjbGFzczogJ3NjcmVlbicgfSwgWwogICAgICB0aGlzLnRpdGxlID8gaCgnaDInLCB0aGlzLnRpdGxlKSA6IG51bGwsCiAgICAgIHNsaWRlCiAgICBdKTsKICB9Cn07Cg=="},{"version":3,"sources":["Screen.vue"],"names":[],"mappingsfile":"Screen.vue","sourceRoot":"node_modules/magpie-base/src/components","sourcesContent":["<docs>\n### Simple screen\n\n```vue\n<Experiment>\n    <Screen>\n      Hello World.\n    </Screen>\n</Experiment>\n```\n\n### Show progress\n\n```vue\n<Experiment>\n    <Screen v-for=\"i in 10\" :key=\"i\" :progress=\"i/10\">\n      Hello World.\n      <button @click=\"$magpie.nextScreen()\">Next</button>\n    </Screen>\n</Experiment>\n```\n\n### Multiple slides\nOne screen may consist of multiple slides that are numbered incrementally and displayed one after another.\nYou can go to the next slide with the `nextSlide` function that is exposed by the Screen component.\n\n```vue\n<Experiment>\n    <Screen title=\"Wow.\">\n\n      <Slide>\n        Hello <button @click=\"$magpie.nextSlide()\">World</button>.\n      </Slide>\n\n      <Slide>\n        Hello you.\n      </Slide>\n\n    </Screen>\n</Experiment>\n```\n\n### Store measurements\nThe screen component also conveniently exposes an object for you to store in the measurements of the current screen, so you can later save them.\n\n```vue\n<Experiment>\n    <Screen title=\"Wow.\">\n      <Slide>\n        Hello\n        <TextareaInput :response.sync=\"$magpie.measurements.text\" />\n        {{ $magpie.measurements.text }}?\n        <button v-if=\"$magpie.measurements.text\" @click=\"$magpie.saveAndNextScreen()\">Done</button>\n      </Slide>\n    </Screen>\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n\n### Validate measurements\nThe screen can also be used to validate observations.\n\n```vue\n<Experiment>\n    <Screen :validations=\"{\n      text: {\n        minLength: $magpie.v.minLength(4),\n        alpha: $magpie.v.alpha\n      }\n    }\">\n\n      <Slide>\n        Hello\n        <TextareaInput :response.sync=\"$magpie.measurements.text\" />\n\n        {{ $magpie.measurements.text }}?\n\n        <button v-if=\"!$magpie.validateMeasurements.$invalid\" @click=\"$magpie.saveAndNextScreen()\">Done</button>\n\n        <p v-else>At least 4 characters required and only alphabetic characters, please.</p>\n\n      </Slide>\n\n    </Screen>\n\n    <DebugResults />\n</Experiment>\n```\n\n</docs>\n\n<script>\nimport { validationMixin } from 'vuelidate';\n\n/**\n * This component lets you create experiment sections that appear one after the other like a slideshow.\n * Trial data\n */\nexport default {\n  name: 'Screen',\n  mixins: [validationMixin],\n  props: {\n    /**\n     * The title of this screen\n     */\n    title: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    /**\n     * If you want to show a progress bar, set this to a value between 0 and 1\n     */\n    progress: {\n      type: Number,\n      default: -1\n    },\n    /**\n     * Define validators for measurements\n     */\n    validations: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      measurements: {}\n    };\n  },\n  watch: {\n    '$magpie.measurements': {\n      handler() {\n        this.measurements = this.$magpie.measurements;\n        this.$v.measurements.$touch();\n      },\n      deep: true\n    }\n  },\n  beforeMount() {\n    this.$magpie.setProgress(this.progress);\n  },\n  mounted() {\n    this.$magpie.validateMeasurements = this.$v.measurements;\n    this.$magpie.mousetracking.start();\n  },\n  validations() {\n    return {\n      measurements: this.validations\n    };\n  },\n  /**\n   * Place your slides inside this slot. They will be visible one after the other, like a slide show.\n   * @slot default\n   */\n  render(h) {\n    const children = this.$slots.default;\n    if (!children) {\n      return h('div', { class: 'screen' }, [\n        this.title ? h('h2', this.title) : null\n      ]);\n    }\n    let slide;\n    const slides = children.filter((c) => !!c.componentOptions);\n    if (\n      slides.length &&\n      slides.every((c) => c.componentOptions.tag === 'Slide')\n    ) {\n      slide = slides[this.$magpie.currentSlideIndex];\n    } else {\n      slide = this.$slots.default;\n    }\n    return h('div', { class: 'screen' }, [\n      this.title ? h('h2', this.title) : null,\n      slide\n    ]);\n  }\n};\n</script>\n\n<style scoped>\n.screen {\n  flex-grow: 1;\n  position: relative;\n}\n</style>\n"]}]}