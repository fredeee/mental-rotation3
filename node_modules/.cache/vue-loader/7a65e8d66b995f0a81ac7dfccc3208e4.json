{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/KeypressScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/KeypressScreen.vue","mtime":1642626386085},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZWNvcmQgZnJvbSAnLi4vaGVscGVycy9SZWNvcmQnOwppbXBvcnQgS2V5cHJlc3NJbnB1dCBmcm9tICcuLi9pbnB1dHMvS2V5cHJlc3NJbnB1dCc7CmltcG9ydCBMaWZlY3ljbGVTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9MaWZlY3ljbGVTY3JlZW4nOwppbXBvcnQgRml4YXRpb25Dcm9zcyBmcm9tICcuLi9zdGltdWxpL0ZpeGF0aW9uQ3Jvc3MnOwoKLyoqCiAqIEluaGVyaXRzIGZyb20gTGlmZWN5Y2xlU2NyZWVuCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0tleXByZXNzU2NyZWVuJywKICBjb21wb25lbnRzOiB7CiAgICBGaXhhdGlvbkNyb3NzLAogICAgTGlmZWN5Y2xlU2NyZWVuLAogICAgS2V5cHJlc3NJbnB1dCwKICAgIFJlY29yZAogIH0sCiAgZXh0ZW5kczogTGlmZWN5Y2xlU2NyZWVuLAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIEEgcXVlc3Rpb24KICAgICAqLwogICAgcXVlc3Rpb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8qKgogICAgICogQW4gb2JqZWN0IHdpdGgga2V5cyBtYXBwZWQgdG8gb3B0aW9uIGxhYmVscwogICAgICovCiAgICBrZXlzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["KeypressScreen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"KeypressScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/trial_screens","sourcesContent":["<docs>\nThis is a pre-built keypress screen, with limited functionality, but simpler to use.\n\n```vue\n<Experiment>\n    <KeypressScreen\n        question=\"Are fries healthy?\"\n        :feedback-time=\"1000\"\n        :keys=\"{\n              '~': 'yes',\n              '^': 'no'\n            }\"\n    >\n      <template #stimulus>\n        <img src=\"img/fries.jpg\" />\n      </template>\n      <template #feedback>\n        You are correct.\n      </template>\n    </KeypressScreen>\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <!-- pass down props -->\n  <LifecycleScreen v-bind=\"$props\">\n    <!-- pass down slots -->\n    <template slot=\"fixation\">\n      <slot name=\"fixation\"><FixationCross /></slot>\n      <KeypressInput :keys=\"keys\" />\n    </template>\n    <template slot=\"stimulus\">\n      <slot name=\"stimulus\"></slot>\n    </template>\n\n    <template #task>\n      <Record\n        :data=\"{\n          question\n        }\"\n      />\n      <p v-if=\"question\" v-text=\"question\"></p>\n      <KeypressInput\n        :keys=\"keys\"\n        :response.sync=\"$magpie.measurements.response\"\n        @update:response=\"nextAfterResponse\"\n      />\n    </template>\n\n    <template #feedback>\n      <slot name=\"feedback\"></slot>\n    </template>\n  </LifecycleScreen>\n</template>\n\n<script>\nimport Record from '../helpers/Record';\nimport KeypressInput from '../inputs/KeypressInput';\nimport LifecycleScreen from '../screens/LifecycleScreen';\nimport FixationCross from '../stimuli/FixationCross';\n\n/**\n * Inherits from LifecycleScreen\n */\nexport default {\n  name: 'KeypressScreen',\n  components: {\n    FixationCross,\n    LifecycleScreen,\n    KeypressInput,\n    Record\n  },\n  extends: LifecycleScreen,\n  props: {\n    /**\n     * A question\n     */\n    question: {\n      type: String,\n      default: ''\n    },\n    /**\n     * An object with keys mapped to option labels\n     */\n    keys: {\n      type: Object,\n      required: true\n    }\n  }\n};\n</script>\n<style scoped></style>\n"]}]}