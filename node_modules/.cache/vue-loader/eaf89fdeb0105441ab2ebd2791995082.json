{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/inputs/MultipleChoiceInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/inputs/MultipleChoiceInput.vue","mtime":1642626386089},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qKgogKiBIYXZlIHRoZSBwYXJ0aWNpcGFudCBjaG9vc2UgYmV0d2VlbiBtdWx0aXBsZSBvcHRpb25zLgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNdWx0aXBsZUNob2ljZUlucHV0JywKICBwcm9wczogewogICAgLyoqCiAgICAgKiBUaGUgcG9zc2libGUgb3B0aW9ucyB0byBjaG9vc2UgZnJvbQogICAgICovCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIC8qKgogICAgICogV2hldGhlciB0byBkaXNwbGF5ICd2ZXJ0aWNhbCcgb3IgJ2hvcml6b250YWwnCiAgICAgKi8KICAgIG9yaWVudGF0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3ZlcnRpY2FsJwogICAgfSwKICAgIC8qKgogICAgICogV2hldGhlciB0byBkaXNwbGF5IGxhYmVscwogICAgICovCiAgICBsYWJlbHM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25PcHRpb25DbGljayhvcHRpb24pIHsKICAgICAgLyoqCiAgICAgICAqIENoYW5nZSBldmVudCB3aXRoIHRoZSBjaG9zZW4gb3B0aW9uLiBVc2VmdWwgaW4gY29tYmluYXRpb24gd2l0aCBgcmVzcG9uc2Uuc3luY2AKICAgICAgICovCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpyZXNwb25zZScsIG9wdGlvbik7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["MultipleChoiceInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MultipleChoiceInput.vue","sourceRoot":"node_modules/magpie-base/src/components/inputs","sourcesContent":["<docs>\n\n```vue\n<Experiment>\n    <Screen>\n\n      <Slide>\n        <p>How was your breakfast?</p>\n        <MultipleChoiceInput\n            :response.sync= \"$magpie.measurements.breakfast\"\n            :options=\"['Not enjoyable', 'Rather not enjoyable', 'OK', 'Rather enjoyable', 'Really enjoyable']\" />\n        <button @click=\"$magpie.saveAndNextScreen();\">Submit</button>\n      </Slide>\n\n    </Screen>\n</Experiment>\n```\n\n\n```vue\n<Experiment>\n    <Screen>\n\n      <Slide>\n        <p>How was your breakfast?</p>\n        <MultipleChoiceInput\n            :response.sync= \"$magpie.measurements.breakfast\"\n            orientation=\"horizontal\"\n            :options=\"['Not enjoyable', 'Rather not enjoyable', 'OK', 'Rather enjoyable', 'Really enjoyable']\" />\n        <button @click=\"$magpie.saveAndNextScreen();\">Submit</button>\n      </Slide>\n\n    </Screen>\n</Experiment>\n```\n\n</docs>\n\n<template>\n  <div :class=\"['multiple-choice', orientation]\">\n    <form>\n      <div class=\"options\">\n        <label v-for=\"(option, i) in options\" :key=\"i\"\n          ><input\n            :value=\"option\"\n            type=\"radio\"\n            name=\"options\"\n            @input=\"$emit('update:response', option)\"\n          />\n          <template v-if=\"labels\">{{ option }}</template></label\n        >\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/**\n * Have the participant choose between multiple options.\n */\nexport default {\n  name: 'MultipleChoiceInput',\n  props: {\n    /**\n     * The possible options to choose from\n     */\n    options: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Whether to display 'vertical' or 'horizontal'\n     */\n    orientation: {\n      type: String,\n      default: 'vertical'\n    },\n    /**\n     * Whether to display labels\n     */\n    labels: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    onOptionClick(option) {\n      /**\n       * Change event with the chosen option. Useful in combination with `response.sync`\n       */\n      this.$emit('update:response', option);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.options label,\n.options label * {\n  cursor: pointer;\n}\n\n.multiple-choice.vertical {\n  text-align: left;\n  width: 500px;\n  margin: 0 auto;\n}\n\n.multiple-choice.vertical label {\n  display: block;\n}\n\n.multiple-choice.horizontal label {\n  display: inline-block;\n  margin: 0 10px;\n}\n\n.option:hover {\n  background-color: #324d93;\n}\n</style>\n"]}]}