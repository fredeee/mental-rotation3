{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/ForcedChoiceMousetrackingScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/ForcedChoiceMousetrackingScreen.vue","mtime":1642626386076},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFdhaXQgZnJvbSAnLi4vaGVscGVycy9XYWl0JzsKaW1wb3J0IFNjcmVlbiBmcm9tICcuLi9TY3JlZW4nOwppbXBvcnQgU2xpZGUgZnJvbSAnLi4vU2xpZGUnOwppbXBvcnQgVGltZXJTdG9wIGZyb20gJy4uL2hlbHBlcnMvVGltZXJTdG9wJzsKaW1wb3J0IFRpbWVyU3RhcnQgZnJvbSAnLi4vaGVscGVycy9UaW1lclN0YXJ0JzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRm9yY2VkQ2hvaWNlTW91c2V0cmFja2luZ1NjcmVlbicsCiAgY29tcG9uZW50czogeyBUaW1lclN0YXJ0LCBUaW1lclN0b3AsIFNsaWRlLCBTY3JlZW4sIFdhaXQgfSwKICBwcm9wczogewogICAgLyoqCiAgICAgKiBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2Ygb3B0aW9uIDEKICAgICAqLwogICAgb3B0aW9uMTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdvcHRpb24xJwogICAgfSwKICAgIC8qKgogICAgICogc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIG9wdGlvbiAyCiAgICAgKi8KICAgIG9wdGlvbjI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnb3B0aW9uMicKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBldmVudCB0aGF0IGNhdXNlcyB0aGUgcmVzcG9uc2UgdG8gYmUgc2VsZWN0ZWQsIGUuZy4gYGNsaWNrYCwgYG1vdXNlb3ZlcmAsIGV0Yy4KICAgICAqLwogICAgc2VsZWN0RXZlbnQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnbW91c2VvdmVyJwogICAgfSwKICAgIC8qKgogICAgICogUXVlc3Rpb24gdW5kZXIgZGlzY3Vzc2lvbi4gQWx3YXlzIHZpc2libGUgb24gdGhlIHNjcmVlbgogICAgICovCiAgICBxdWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8qKgogICAgICogRHVyYXRpb24gb2YgdGhlIHBhdXNlIHBoYXNlLCBkb24ndCBzZXQgdGhpcywgdG8gYXZvaWQgdGhlIHBhdXNlIGFsdG9nZXRoZXIKICAgICAqLwogICAgcGF1c2VUaW1lOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIC8qKgogICAgICogSG93IGxvbmcgdGhlIHJlc3BvbnNlIHNob3VsZCBiZSBlbmFibGVkLCBkb24ndCBzZXQgdGhpcywgdG8gYXZvaWQgdGhlIHRpbWVvdXQgYWx0b2dldGhlcgogICAgICovCiAgICByZXNwb25zZVRpbWU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxheWluZzogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgYnV0dG9uQ29vcmRpbmF0ZXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgeDogdGhpcy4kcmVmcy5idXR0b24uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkueCwKICAgICAgICB5OiB0aGlzLiRyZWZzLmJ1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55CiAgICAgIH07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblByZXNzUGxheSgpIHsKICAgICAgdGhpcy5wbGF5aW5nID0gdHJ1ZTsKICAgICAgdGhpcy4kbWFncGllLm1vdXNldHJhY2tpbmcuc3RhcnQoCiAgICAgICAgdGhpcy5idXR0b25Db29yZGluYXRlcy54LAogICAgICAgIHRoaXMuYnV0dG9uQ29vcmRpbmF0ZXMueQogICAgICApOwogICAgfSwKICAgIHN1Ym1pdChsYWJlbCkgewogICAgICBpZiAoIXRoaXMucGxheWluZykgcmV0dXJuOwogICAgICB0aGlzLiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlID0gdGhpc1tsYWJlbF07CiAgICAgIGNvbnN0IG1vdXNlVHJhY2sgPSB0aGlzLiRtYWdwaWUubW91c2V0cmFja2luZy5nZXRNb3VzZVRyYWNrKCk7CiAgICAgIGZvciAoY29uc3QgcHJvcCBpbiBtb3VzZVRyYWNrKSB7CiAgICAgICAgVnVlLnNldCgKICAgICAgICAgIHRoaXMuJG1hZ3BpZS5tZWFzdXJlbWVudHMsCiAgICAgICAgICBwcm9wLAogICAgICAgICAgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShtb3VzZVRyYWNrW3Byb3BdKSkKICAgICAgICApOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["ForcedChoiceMousetrackingScreen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ForcedChoiceMousetrackingScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/trial_screens","sourcesContent":["<docs>\n\n```vue\n<Experiment>\n    <template v-for=\"(task, i) in [\n      {o1: 'Mammal', o2: 'Bird', s: 'Bat'},\n      {o1: 'Bird', o2: 'Insect', s: 'Kolibri'},\n      {o1: 'Fish', o2: 'Mammal', s: 'Whale'},\n      {o1: 'Fish', o2: 'Bird', s: 'Penguin'}\n      ]\">\n      <ForcedChoiceMousetrackingScreen :key=\"i\" :option1=\"task.o1\" :option2=\"task.o2\">\n            <template #option1>\n              <div :style=\"{backgroundColor: 'lightyellow', width: '100px', padding: '70px'}\">\n                {{ task.o1 }}\n              </div>\n            </template>\n            <template #option2>\n              <div :style=\"{backgroundColor: 'lightyellow', width: '100px', padding: '70px'}\">\n                {{ task.o2 }}\n              </div>\n            </template>\n            <template #stimulus>\n              <span>{{ task.s }}</span>\n            </template>\n            <template #feedback>\n              <!-- add values in `task` to measurements -->\n              <Record :data=\"{...task}\" />\n              <Wait :time=\"100\" @done=\"$magpie.saveAndNextScreen()\" />\n            </template>\n      </ForcedChoiceMousetrackingScreen>\n    </template>\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n\n</docs>\n\n<template>\n  <Screen v-bind=\"$attrs\">\n    <Slide>\n      <p v-if=\"qud\" class=\"qud\" v-text=\"qud\" />\n      <!-- @slot provide a preparation stimulus, i.e. a text or an audio explanation-->\n      <slot name=\"preparation\">\n        <Wait :time=\"1\" @done=\"$magpie.nextSlide()\" />\n      </slot>\n    </Slide>\n\n    <Slide>\n      <p v-if=\"qud\" class=\"qud\" v-text=\"qud\" />\n      <Wait key=\"pause\" :time=\"pauseTime\" @done=\"$magpie.nextSlide()\" />\n    </Slide>\n\n    <Slide>\n      <p v-if=\"qud\" class=\"qud\" v-text=\"qud\" />\n      <Wait key=\"wait a bit\" :time=\"500\" @done=\"$magpie.nextSlide()\" />\n      <div class=\"options\">\n        <!-- @slot provide content for choice one -->\n        <div class=\"option1\"><slot name=\"option1\" /></div>\n        <div class=\"space\"></div>\n        <!-- @slot provide content for choice two -->\n        <div class=\"option2\"><slot name=\"option2\" /></div>\n      </div>\n    </Slide>\n\n    <Slide>\n      <div class=\"options\">\n        <div\n          v-if=\"!$magpie.measurements.response\"\n          class=\"option1\"\n          @[selectEvent]=\"submit('option1')\"\n        >\n          <slot name=\"option1\" />\n        </div>\n        <div class=\"space\"></div>\n        <div\n          v-if=\"!$magpie.measurements.response\"\n          class=\"option2\"\n          @[selectEvent]=\"submit('option2')\"\n        >\n          <slot name=\"option2\" />\n        </div>\n      </div>\n      <p v-if=\"qud\" class=\"qud\" v-text=\"qud\" />\n      <div class=\"stimulus\">\n        <!-- @slot provide content for the main stimulus\n         @binding {object} coordinates The coordinates of the Start button on the page (`{x: number, y: number})\n         -->\n        <slot v-if=\"playing\" name=\"stimulus\" :coordinates=\"buttonCoordinates\" />\n        <slot v-if=\"$magpie.measurements.response\" name=\"feedback\" />\n      </div>\n      <button v-if=\"!playing\" ref=\"button\" @click=\"onPressPlay\">Go</button>\n      <Wait\n        v-if=\"playing && responseTime\"\n        :time=\"responseTime\"\n        @done=\"$magpie.nextSlide()\"\n      />\n      <TimerStart v-if=\"playing\" id=\"fcmt-response-time\" />\n      <TimerStop\n        v-if=\"$magpie.measurements.response\"\n        id=\"fcmt-response-time\"\n        :time.sync=\"$magpie.measurements.response_time\"\n      />\n    </Slide>\n  </Screen>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Wait from '../helpers/Wait';\nimport Screen from '../Screen';\nimport Slide from '../Slide';\nimport TimerStop from '../helpers/TimerStop';\nimport TimerStart from '../helpers/TimerStart';\n\nexport default {\n  name: 'ForcedChoiceMousetrackingScreen',\n  components: { TimerStart, TimerStop, Slide, Screen, Wait },\n  props: {\n    /**\n     * string representation of option 1\n     */\n    option1: {\n      type: String,\n      default: 'option1'\n    },\n    /**\n     * string representation of option 2\n     */\n    option2: {\n      type: String,\n      default: 'option2'\n    },\n    /**\n     * The event that causes the response to be selected, e.g. `click`, `mouseover`, etc.\n     */\n    selectEvent: {\n      type: String,\n      default: 'mouseover'\n    },\n    /**\n     * Question under discussion. Always visible on the screen\n     */\n    qud: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Duration of the pause phase, don't set this, to avoid the pause altogether\n     */\n    pauseTime: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * How long the response should be enabled, don't set this, to avoid the timeout altogether\n     */\n    responseTime: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      playing: false\n    };\n  },\n  computed: {\n    buttonCoordinates() {\n      return {\n        x: this.$refs.button.getBoundingClientRect().x,\n        y: this.$refs.button.getBoundingClientRect().y\n      };\n    }\n  },\n  methods: {\n    onPressPlay() {\n      this.playing = true;\n      this.$magpie.mousetracking.start(\n        this.buttonCoordinates.x,\n        this.buttonCoordinates.y\n      );\n    },\n    submit(label) {\n      if (!this.playing) return;\n      this.$magpie.measurements.response = this[label];\n      const mouseTrack = this.$magpie.mousetracking.getMouseTrack();\n      for (const prop in mouseTrack) {\n        Vue.set(\n          this.$magpie.measurements,\n          prop,\n          JSON.parse(JSON.stringify(mouseTrack[prop]))\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.options {\n  display: flex;\n  flex-direction: row;\n}\n\n.options .space {\n  flex: 1;\n}\n\n.options .option1,\n.options .option2 {\n  flex: 0;\n}\n\n.stimulus {\n  bottom: 200px;\n  position: absolute;\n  width: 100%;\n}\n\nbutton {\n  bottom: 20px;\n  left: 50%;\n  position: absolute;\n}\n\n.qud {\n  position: relative;\n  top: 150px;\n}\n</style>\n"]}]}