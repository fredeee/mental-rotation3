{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/Experiment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/Experiment.vue","mtime":1642626386070},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNYWdwaWUgZnJvbSAnLi4vTWFncGllJzsKaW1wb3J0IGtQcm9ncmVzcyBmcm9tICdrLXByb2dyZXNzJzsKCi8qKgogKiBUaGlzIGlzIHRoZSBtYWluIGNvbXBvbmVudCBmb3IgeW91ciBvbmxpbmUgZXhwZXJpbWVudC4gUHV0IGl0IGF0IHRoZSByb290IG9mIHlvdXIgYXBwbGljYXRpb24uCiAqIFRoZSBleHBlcmltZW50IGlzIGF2YWlsYWJsZSBpbiBhbGwgc3ViY29tcG9uZW50cyBhbmQgaW4gdGhlIHBhcmVudCBhcyBgJG1hZ3BpZWAKICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRXhwZXJpbWVudCcsCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogV2hldGhlciB0byBkaXNwbGF5IHRoZSBleHBlcmltZW50IGluIHdpZGUgZm9ybWF0LWZpbGxpbmcgbW9kZQogICAgICovCiAgICB3aWRlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLyoqCiAgICAgKiBPcHRpb25hbGx5IHNwZWNpZnkgYSB0aXRsZSBmb3IgeW91ciBleHBlcmltZW50IHdoaWNoIHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSBicm93c2VyIHRpdGxlIGJhciAob3IgaW4gdGhlIGJyb3dzZXIgdGFiKQogICAgICovCiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAoKICAgIC8qKgogICAgICogUGFzcyBhbiBhcnJheSBvZiBwYXRocyB0byBpbWFnZXMgdGhhdCB3aWxsIGJlIG5lZWRlZCBpbiB0aGlzIGV4cGVyaW1lbnQgdG8gZW5hYmxlIHByZWxvYWRpbmcKICAgICAqLwogICAgaW1hZ2VBc3NldHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogUGFzcyBhbiBhcnJheSBvZiBwYXRocyB0byBhdWRpbyBmaWxlcyB0aGF0IHdpbGwgYmUgbmVlZGVkIGluIHRoaXMgZXhwZXJpbWVudCB0byBlbmFibGUgcHJlbG9hZGluZwogICAgICovCiAgICBhdWRpb0Fzc2V0czogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBQYXNzIGFuIGFycmF5IG9mIHBhdGhzIHRvIHZpZGVvIGZpbGVzIHRoYXQgd2lsbCBiZSBuZWVkZWQgaW4gdGhpcyBleHBlcmltZW50IHRvIGVuYWJsZSBwcmVsb2FkaW5nCiAgICAgKi8KICAgIHZpZGVvQXNzZXRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGN1cnJlbnRTY3JlZW5Db21wb25lbnQ6IHt9CiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuJHBhcmVudC5tYWdwaWUgPSBuZXcgTWFncGllKHRoaXMuJG9wdGlvbnMubWFncGllKTsKICAgIHRoaXMuJG1hZ3BpZS5leHBlcmltZW50ID0gdGhpczsKICAgIHdpbmRvdy4kbWFncGllID0gdGhpcy4kbWFncGllOwoKICAgIGlmICh0aGlzLnRpdGxlKSB7CiAgICAgIGRvY3VtZW50LnRpdGxlID0gdGhpcy50aXRsZTsKICAgIH0KCiAgICAvLyBwcmVsb2FkIGltYWdlcwogICAgdGhpcy5pbWFnZUFzc2V0cy5mb3JFYWNoKChwYXRoKSA9PiB7CiAgICAgIGNvbnN0IHByZWxvYWRMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpOwogICAgICBwcmVsb2FkTGluay5ocmVmID0gcGF0aDsKICAgICAgcHJlbG9hZExpbmsucmVsID0gJ3ByZWxvYWQnOwogICAgICBwcmVsb2FkTGluay5hcyA9ICdpbWFnZSc7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocHJlbG9hZExpbmspOwogICAgfSk7CgogICAgLy8gcHJlbG9hZCBhdWRpbwogICAgdGhpcy5hdWRpb0Fzc2V0cy5mb3JFYWNoKChwYXRoKSA9PiB7CiAgICAgIGNvbnN0IHByZWxvYWRMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpOwogICAgICBwcmVsb2FkTGluay5ocmVmID0gcGF0aDsKICAgICAgcHJlbG9hZExpbmsucmVsID0gJ3ByZWxvYWQnOwogICAgICBwcmVsb2FkTGluay5hcyA9ICdhdWRpbyc7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocHJlbG9hZExpbmspOwogICAgfSk7CgogICAgLy8gcHJlbG9hZCB2aWRlbwogICAgdGhpcy52aWRlb0Fzc2V0cy5mb3JFYWNoKChwYXRoKSA9PiB7CiAgICAgIGNvbnN0IHByZWxvYWRMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpOwogICAgICBwcmVsb2FkTGluay5ocmVmID0gcGF0aDsKICAgICAgcHJlbG9hZExpbmsucmVsID0gJ3ByZWxvYWQnOwogICAgICBwcmVsb2FkTGluay5hcyA9ICd2aWRlbyc7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocHJlbG9hZExpbmspOwogICAgfSk7CgogICAgLy8gQXNrIHRoZSB1c2VyIGJlZm9yZSBjbG9zaW5nIHRoZSBwYWdlCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgKGUpID0+IHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSk7CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgKGUpID0+CiAgICAgIHRoaXMuJG1hZ3BpZS5tb3VzZXRyYWNraW5nLm9uTW91c2VNb3ZlKGUpCiAgICApOwogIH0sCiAgbWV0aG9kczogewogICAgc2Nyb2xsVG9Ub3AoKSB7CiAgICAgIC8vIFNjcm9sbCB0byB0b3Agb2YgZXhwZXJpbWVudCBlbGVtZW50CiAgICAgIGNvbnN0IGV4cFBvcyA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgd2luZG93LnNjcm9sbFkgKyBleHBQb3MudG9wKTsKICAgIH0KICB9LAogIC8qKgogICAqIFRoZSBjb250ZW50cyBvZiB0aGlzIHNsb3Qgd2lsbCBiZSB2aXNpYmxlIGR1cmluZyB0aGUgZW50aXJlIGV4cGVyaW1lbnQKICAgKiBAc2xvdCB0aXRsZQogICAqLwogIC8qKgogICAqIFBsYWNlIHlvdXIgc2NyZWVucyBpbnNpZGUgdGhpcyBzbG90LiBUaGV5IHdpbGwgYmUgdmlzaWJsZSBvbmUgYWZ0ZXIgdGhlIG90aGVyLCBsaWtlIGEgc2xpZGUgc2hvdy4KICAgKiBAc2xvdCBkZWZhdWx0CiAgICovCiAgcmVuZGVyKGgpIHsKICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy4kc2xvdHMuZGVmYXVsdDsKICAgIGNvbnN0IHNjcmVlbiA9IGNoaWxkcmVuCiAgICAgID8gY2hpbGRyZW4uZmlsdGVyKChjKSA9PiAhIWMuY29tcG9uZW50T3B0aW9ucylbCiAgICAgICAgICB0aGlzLiRtYWdwaWUuY3VycmVudFNjcmVlbkluZGV4CiAgICAgICAgXQogICAgICA6IG51bGw7CiAgICByZXR1cm4gaCgnZGl2JywgeyBjbGFzczogJ2V4cGVyaW1lbnQnICsgKHRoaXMud2lkZSA/ICcgd2lkZScgOiAnJykgfSwgWwogICAgICBoKCdkaXYnLCB7IGNsYXNzOiAnaGVhZGVyJyB9LCBbCiAgICAgICAgaCgnZGl2JywgeyBjbGFzczogJ2NvbCB0aXRsZScgfSwgdGhpcy4kc2xvdHMudGl0bGUpLAogICAgICAgIGgoJ2RpdicsIHsgY2xhc3M6ICdjb2wgc3RhdHVzJyB9LCBbCiAgICAgICAgICB0aGlzLiRtYWdwaWUucHJvZ3Jlc3MgIT09IC0xCiAgICAgICAgICAgID8gaChrUHJvZ3Jlc3MsIHsKICAgICAgICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgICAgICAgIHBlcmNlbnQ6IHRoaXMuJG1hZ3BpZS5wcm9ncmVzcyAqIDEwMCwKICAgICAgICAgICAgICAgICAgc2hvd1RleHQ6IGZhbHNlLAogICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAxMAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHN0eWxlOiB7IHdpZHRoOiAnMTUwcHgnIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICA6IG51bGwKICAgICAgICBdKQogICAgICBdKSwKICAgICAgc2NyZWVuCiAgICBdKTsKICB9Cn07Cg=="},{"version":3,"sources":["Experiment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Experiment.vue","sourceRoot":"node_modules/magpie-base/src/components","sourcesContent":["<docs>\n### A simple experiment with 3 screens\n\n```vue\n<Experiment>\n\n    <Screen>\n      blue\n      <button @click=\"$magpie.nextScreen()\">next</button>\n    </Screen>\n\n    <Screen>\n      green\n      <button @click=\"$magpie.nextScreen()\">next</button>\n    </Screen>\n\n    <Screen>\n      yellow\n    </Screen>\n\n</Experiment>\n```\n\n### Using a loop to create screens\n\n```vue\n<Experiment>\n\n    <Screen v-for=\"(color, i) in ['blue', 'green', 'yellow']\" :key=\"i\">\n      <Slide>\n        Screen {{i}}: {{ color }}\n        <button @click=\"$magpie.nextScreen()\">next</button>\n      </Slide>\n    </Screen>\n\n</Experiment>\n```\n\n\n### Providing a title\nBesides the `screens` slot, the Experiment component also provides an optional `title` slot that allows you to display header information on all screens of your experiment.\n\n```vue\n<Experiment>\n  <template #title>\n    My experiment\n  </template>\n  <template #default>\n    <Screen>\n      blue\n      <button @click=\"$magpie.nextScreen()\">next</button>\n    </Screen>\n    <Screen>\n      green\n      <button @click=\"$magpie.nextScreen()\">next</button>\n    </Screen>\n    <Screen>\n      yellow\n    </Screen>\n  </template>\n</Experiment>\n```\n</docs>\n\n<script>\nimport Magpie from '../Magpie';\nimport kProgress from 'k-progress';\n\n/**\n * This is the main component for your online experiment. Put it at the root of your application.\n * The experiment is available in all subcomponents and in the parent as `$magpie`\n */\nexport default {\n  name: 'Experiment',\n  props: {\n    /**\n     * Whether to display the experiment in wide format-filling mode\n     */\n    wide: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Optionally specify a title for your experiment which will be displayed in the browser title bar (or in the browser tab)\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * Pass an array of paths to images that will be needed in this experiment to enable preloading\n     */\n    imageAssets: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n\n    /**\n     * Pass an array of paths to audio files that will be needed in this experiment to enable preloading\n     */\n    audioAssets: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n\n    /**\n     * Pass an array of paths to video files that will be needed in this experiment to enable preloading\n     */\n    videoAssets: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      currentScreenComponent: {}\n    };\n  },\n  created() {\n    this.$parent.magpie = new Magpie(this.$options.magpie);\n    this.$magpie.experiment = this;\n    window.$magpie = this.$magpie;\n\n    if (this.title) {\n      document.title = this.title;\n    }\n\n    // preload images\n    this.imageAssets.forEach((path) => {\n      const preloadLink = document.createElement('link');\n      preloadLink.href = path;\n      preloadLink.rel = 'preload';\n      preloadLink.as = 'image';\n      document.head.appendChild(preloadLink);\n    });\n\n    // preload audio\n    this.audioAssets.forEach((path) => {\n      const preloadLink = document.createElement('link');\n      preloadLink.href = path;\n      preloadLink.rel = 'preload';\n      preloadLink.as = 'audio';\n      document.head.appendChild(preloadLink);\n    });\n\n    // preload video\n    this.videoAssets.forEach((path) => {\n      const preloadLink = document.createElement('link');\n      preloadLink.href = path;\n      preloadLink.rel = 'preload';\n      preloadLink.as = 'video';\n      document.head.appendChild(preloadLink);\n    });\n\n    // Ask the user before closing the page\n    window.addEventListener('beforeunload', (e) => {\n      e.preventDefault();\n    });\n  },\n  mounted() {\n    this.$el.addEventListener('mousemove', (e) =>\n      this.$magpie.mousetracking.onMouseMove(e)\n    );\n  },\n  methods: {\n    scrollToTop() {\n      // Scroll to top of experiment element\n      const expPos = this.$el.getBoundingClientRect();\n      window.scrollTo(0, window.scrollY + expPos.top);\n    }\n  },\n  /**\n   * The contents of this slot will be visible during the entire experiment\n   * @slot title\n   */\n  /**\n   * Place your screens inside this slot. They will be visible one after the other, like a slide show.\n   * @slot default\n   */\n  render(h) {\n    const children = this.$slots.default;\n    const screen = children\n      ? children.filter((c) => !!c.componentOptions)[\n          this.$magpie.currentScreenIndex\n        ]\n      : null;\n    return h('div', { class: 'experiment' + (this.wide ? ' wide' : '') }, [\n      h('div', { class: 'header' }, [\n        h('div', { class: 'col title' }, this.$slots.title),\n        h('div', { class: 'col status' }, [\n          this.$magpie.progress !== -1\n            ? h(kProgress, {\n                props: {\n                  percent: this.$magpie.progress * 100,\n                  showText: false,\n                  lineHeight: 10\n                },\n                style: { width: '150px' }\n              })\n            : null\n        ])\n      ]),\n      screen\n    ]);\n  }\n};\n</script>\n\n<style>\n.experiment {\n  box-sizing: border-box;\n  margin: 3% auto;\n  width: 900px;\n  min-height: 600px;\n  border-radius: 10px;\n  border: 1px solid #ababab;\n  padding: 20px;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.experiment.wide {\n  width: 100%;\n  margin: 0;\n  min-height: 98vh; /* 98% of viewport height */\n  border: none;\n}\n\n.header {\n  text-align: left;\n  display: flex;\n  flex-direction: row;\n  flex-grow: 0;\n}\n\n.header .col {\n  flex-shrink: 0;\n  flex-grow: 1;\n}\n\n.header .col:last-child {\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.experiment.wide .header .col:last-child {\n  flex-direction: row;\n}\n\n.header .k-progress-outer {\n  padding-right: 0; /* hacky stylefix for progress bar */\n}\n\n/**\n Default styles\n */\n\nh1,\nh2,\nh3,\nh4 {\n  color: rgba(0, 0, 0, 0.87);\n  font-family: 'Playfair Display', 'Noto Serif', serif;\n  text-align: center;\n}\n\nh1 {\n  font-size: 34px;\n}\n\n.experiment {\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 17px;\n  line-height: 27px;\n  font-family: 'Lato', 'Noto Sans', sans-serif;\n}\n\nbutton {\n  background-color: #5187ba;\n  border: none;\n  border-radius: 2px;\n  color: white;\n  display: block;\n  font-family: 'Lato', 'Noto Sans', sans-serif;\n  font-size: 12px;\n  line-height: 20px;\n  font-weight: 700;\n  letter-spacing: 0.9px;\n  margin: 40px auto 20px auto;\n  outline: none;\n  padding: 5px 10px;\n  text-transform: uppercase;\n}\n\nbutton:hover,\nbutton:focus {\n  background-color: #324d93;\n}\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n  max-height: 400px;\n  width: auto;\n}\n</style>\n"]}]}