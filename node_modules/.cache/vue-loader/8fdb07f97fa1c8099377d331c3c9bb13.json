{"remainingRequest":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/ForcedChoiceMousetrackingScreen.vue?vue&type=template&id=703fcb00&scoped=true&","dependencies":[{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/magpie-base/src/components/trial_screens/ForcedChoiceMousetrackingScreen.vue","mtime":1642626386076},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642626385166},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/cache-loader/dist/cjs.js","mtime":1642626384207},{"path":"/Users/fbecker/Documents/Uni/mentalrotation3/node_modules/vue-loader/lib/index.js","mtime":1642626384903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJTY3JlZW4iLAogICAgX3ZtLl9iKHt9LCAiU2NyZWVuIiwgX3ZtLiRhdHRycywgZmFsc2UpLAogICAgWwogICAgICBfYygKICAgICAgICAiU2xpZGUiLAogICAgICAgIFsKICAgICAgICAgIF92bS5xdWQKICAgICAgICAgICAgPyBfYygicCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicXVkIiwKICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHRleHRDb250ZW50OiBfdm0uX3MoX3ZtLnF1ZCkgfSwKICAgICAgICAgICAgICB9KQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX3ZtLl90KCJwcmVwYXJhdGlvbiIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICBfYygiV2FpdCIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRpbWU6IDEgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGRvbmU6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRtYWdwaWUubmV4dFNsaWRlKCkKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0KICAgICAgICAgIH0pLAogICAgICAgIF0sCiAgICAgICAgMgogICAgICApLAogICAgICBfYygKICAgICAgICAiU2xpZGUiLAogICAgICAgIFsKICAgICAgICAgIF92bS5xdWQKICAgICAgICAgICAgPyBfYygicCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicXVkIiwKICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHRleHRDb250ZW50OiBfdm0uX3MoX3ZtLnF1ZCkgfSwKICAgICAgICAgICAgICB9KQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX2MoIldhaXQiLCB7CiAgICAgICAgICAgIGtleTogInBhdXNlIiwKICAgICAgICAgICAgYXR0cnM6IHsgdGltZTogX3ZtLnBhdXNlVGltZSB9LAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGRvbmU6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJG1hZ3BpZS5uZXh0U2xpZGUoKQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgIlNsaWRlIiwKICAgICAgICBbCiAgICAgICAgICBfdm0ucXVkCiAgICAgICAgICAgID8gX2MoInAiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInF1ZCIsCiAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB0ZXh0Q29udGVudDogX3ZtLl9zKF92bS5xdWQpIH0sCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF9jKCJXYWl0IiwgewogICAgICAgICAgICBrZXk6ICJ3YWl0IGEgYml0IiwKICAgICAgICAgICAgYXR0cnM6IHsgdGltZTogNTAwIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgZG9uZTogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kbWFncGllLm5leHRTbGlkZSgpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvcHRpb25zIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3B0aW9uMSIgfSwgW192bS5fdCgib3B0aW9uMSIpXSwgMiksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3BhY2UiIH0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9wdGlvbjIiIH0sIFtfdm0uX3QoIm9wdGlvbjIiKV0sIDIpLAogICAgICAgICAgXSksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJTbGlkZSIsCiAgICAgICAgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvcHRpb25zIiB9LCBbCiAgICAgICAgICAgICFfdm0uJG1hZ3BpZS5tZWFzdXJlbWVudHMucmVzcG9uc2UKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3B0aW9uMSIsCiAgICAgICAgICAgICAgICAgICAgb246IF92bS5fZCh7fSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLnNlbGVjdEV2ZW50LAogICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnN1Ym1pdCgib3B0aW9uMSIpCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl90KCJvcHRpb24xIildLAogICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFjZSIgfSksCiAgICAgICAgICAgICFfdm0uJG1hZ3BpZS5tZWFzdXJlbWVudHMucmVzcG9uc2UKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3B0aW9uMiIsCiAgICAgICAgICAgICAgICAgICAgb246IF92bS5fZCh7fSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLnNlbGVjdEV2ZW50LAogICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnN1Ym1pdCgib3B0aW9uMiIpCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl90KCJvcHRpb24yIildLAogICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLnF1ZAogICAgICAgICAgICA/IF9jKCJwIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJxdWQiLAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdGV4dENvbnRlbnQ6IF92bS5fcyhfdm0ucXVkKSB9LAogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzdGltdWx1cyIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5wbGF5aW5nCiAgICAgICAgICAgICAgICA/IF92bS5fdCgic3RpbXVsdXMiLCBudWxsLCB7CiAgICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IF92bS5idXR0b25Db29yZGluYXRlcywKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgX3ZtLiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlID8gX3ZtLl90KCJmZWVkYmFjayIpIDogX3ZtLl9lKCksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICksCiAgICAgICAgICAhX3ZtLnBsYXlpbmcKICAgICAgICAgICAgPyBfYygiYnV0dG9uIiwgeyByZWY6ICJidXR0b24iLCBvbjogeyBjbGljazogX3ZtLm9uUHJlc3NQbGF5IH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJHbyIpLAogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0ucGxheWluZyAmJiBfdm0ucmVzcG9uc2VUaW1lCiAgICAgICAgICAgID8gX2MoIldhaXQiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB0aW1lOiBfdm0ucmVzcG9uc2VUaW1lIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBkb25lOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kbWFncGllLm5leHRTbGlkZSgpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0ucGxheWluZwogICAgICAgICAgICA/IF9jKCJUaW1lclN0YXJ0IiwgeyBhdHRyczogeyBpZDogImZjbXQtcmVzcG9uc2UtdGltZSIgfSB9KQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX3ZtLiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlCiAgICAgICAgICAgID8gX2MoIlRpbWVyU3RvcCIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIGlkOiAiZmNtdC1yZXNwb25zZS10aW1lIiwKICAgICAgICAgICAgICAgICAgdGltZTogX3ZtLiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlX3RpbWUsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgInVwZGF0ZTp0aW1lIjogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJHNldCgKICAgICAgICAgICAgICAgICAgICAgIF92bS4kbWFncGllLm1lYXN1cmVtZW50cywKICAgICAgICAgICAgICAgICAgICAgICJyZXNwb25zZV90aW1lIiwKICAgICAgICAgICAgICAgICAgICAgICRldmVudAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}